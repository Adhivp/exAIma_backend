name: Deploy to Azure VM

on:
  push:
    branches: [ main ]
    paths:
      - 'requirements.txt'  # Only trigger on requirements.txt changes
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.AZURE_VM_SSH_KEY }}
        
    - name: Deploy to Azure VM
      run: |
        # Add VM host key to known hosts
        ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts
        
        # SSH into VM and execute commands
        ssh ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
          # More robust process detection
          echo "Checking for existing process..."
          PROCESS_PID=$(pgrep -f "python3 main.py" || echo "")
          if [ ! -z "$PROCESS_PID" ]; then
            echo "Stopping existing process with PID: $PROCESS_PID"
            kill -9 $PROCESS_PID || echo "Failed to kill process"
            sleep 2
          else
            echo "No existing process found"
          fi
          
          # Navigate to project directory (create if needed)
          mkdir -p ~/exAIma_backend
          cd ~/exAIma_backend
          
          # Check if git repo exists, initialize if not
          if [ ! -d ".git" ]; then
            echo "Initializing git repository..."
            git init
            git remote add origin https://github.com/adhivp/exAIma_backend.git
          fi
          
          # Clean any local changes and pull latest code
          echo "Pulling latest changes..."
          git fetch origin main
          git clean -fd
          git reset --hard origin/main
          
          # Ensure required packages are installed
          echo "Installing required system packages..."
          sudo apt update
          sudo apt install -y python3-venv python3-pip
          
          # Create and activate virtual environment
          echo "Setting up Python virtual environment..."
          python3 -m venv venv || echo "Failed to create venv, attempting to continue"
          source venv/bin/activate
          
          # Install dependencies
          echo "Installing Python dependencies..."
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt
          
          # Start application in background
          echo "Starting application..."
          cd ~/exAIma_backend
          nohup python3 main.py > app.log 2>&1 &
          
          # Verify process is running
          sleep 2
          if pgrep -f "python3 main.py" > /dev/null; then
            echo "Application started successfully with PID: $(pgrep -f 'python3 main.py')"
          else
            echo "WARNING: Application may not have started properly"
            tail -n 20 app.log
          fi
          
          echo "Deployment completed successfully"
        EOF