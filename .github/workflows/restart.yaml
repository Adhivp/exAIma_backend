name: Update and Restart Application on Azure VM

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'requirements.txt'  # Don't trigger on requirements.txt changes (deploy.yaml handles those)
  workflow_dispatch:

jobs:
  restart:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.AZURE_VM_SSH_KEY }}
        
    - name: Update Code and Restart Application
      run: |
        # Add VM host key to known hosts
        ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts
        
        # SSH into VM and restart the application
        ssh ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
          # More robust process detection
          echo "Checking for existing process..."
          PROCESS_PID=$(pgrep -f "python3 main.py" || echo "")
          if [ ! -z "$PROCESS_PID" ]; then
            echo "Stopping existing process with PID: $PROCESS_PID"
            kill -9 $PROCESS_PID || echo "Failed to kill process"
            sleep 2
          else
            echo "No existing process found"
          fi
          
          # Navigate to project directory
          cd ~/exAIma_backend
          
          # Pull latest changes from git
          echo "Pulling latest code changes..."
          if [ -d ".git" ]; then
            git fetch origin main
            git reset --hard origin/main
            echo "Latest code pulled successfully"
          else
            echo "ERROR: Git repository not initialized"
            exit 1
          fi
          
          # Activate virtual environment
          echo "Activating virtual environment..."
          if [ -d "venv" ]; then
            source venv/bin/activate
          else
            echo "Creating new virtual environment..."
            python3 -m venv venv
            source venv/bin/activate
            python3 -m pip install --upgrade pip
            python3 -m pip install -r requirements.txt
          fi
          
          # Start application in background
          echo "Starting application..."
          cd ~/exAIma_backend
          nohup python3 main.py > app.log 2>&1 &
          
          # Verify process is running
          sleep 2
          if pgrep -f "python3 main.py" > /dev/null; then
            echo "Application started successfully with PID: $(pgrep -f 'python3 main.py')"
          else
            echo "WARNING: Application may not have started properly"
            tail -n 20 app.log
          fi
          
          echo "Application updated and restarted successfully"
        EOF