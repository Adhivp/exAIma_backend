name: Update and Restart Application on Azure VM

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'requirements.txt'  # Don't trigger on requirements.txt changes (deploy.yaml handles those)
  workflow_dispatch:

jobs:
  restart:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.AZURE_VM_SSH_KEY }}
        
    - name: Update Code and Restart Application
      run: |
        # Add VM host key to known hosts
        ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts
        
        # SSH into VM and restart the application
        ssh ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
          # Enhanced process detection - check all possible methods
          echo "Checking for existing processes..."
          
          # 1. Check using pgrep
          PGREP_PIDS=$(pgrep -f "python3 main.py" || echo "")
          
          # 2. Check using ps and grep
          PS_PIDS=$(ps aux | grep "python3 main.py" | grep -v grep | awk '{print $2}' || echo "")
          
          # 3. Check ports that might be in use (adjust port as needed)
          PORT_PIDS=$(lsof -i:8000 -t 2>/dev/null || echo "")
          
          # Combine all PIDs, remove duplicates, and filter out empty strings
          ALL_PIDS=$(echo "$PGREP_PIDS $PS_PIDS $PORT_PIDS" | tr ' ' '\n' | grep -v "^$" | sort -u)
          
          if [ ! -z "$ALL_PIDS" ]; then
            echo "Found existing process(es) with PIDs: $ALL_PIDS"
            for PID in $ALL_PIDS; do
              echo "Stopping process with PID: $PID"
              kill -9 $PID || echo "Failed to kill process $PID"
            done
            sleep 3
          else
            echo "No existing processes found"
          fi
          
          # Also ensure the port is free before starting
          echo "Checking if port is in use..."
          if lsof -i:8000 -t &>/dev/null; then
            echo "Port 8000 is still in use! Forcibly releasing port..."
            sudo fuser -k 8000/tcp || echo "Failed to release port"
            sleep 2
          fi
          
          # Navigate to project directory
          cd ~/exAIma_backend
          
          # Pull latest changes from git
          echo "Pulling latest code changes..."
          if [ -d ".git" ]; then
            git fetch origin main
            git reset --hard origin/main
            echo "Latest code pulled successfully"
          else
            echo "ERROR: Git repository not initialized"
            exit 1
          fi
          
          # Activate virtual environment
          echo "Activating virtual environment..."
          if [ -d "venv" ]; then
            source venv/bin/activate
          else
            echo "Creating new virtual environment..."
            python3 -m venv venv
            source venv/bin/activate
            python3 -m pip install --upgrade pip
            python3 -m pip install -r requirements.txt
          fi
          
          # Start application in background
          echo "Starting application..."
          cd ~/exAIma_backend
          nohup python3 main.py > app.log 2>&1 &
          
          # Verify process is running more thoroughly
          sleep 3
          RUNNING_PID=$(pgrep -f "python3 main.py" || echo "")
          
          if [ ! -z "$RUNNING_PID" ]; then
            echo "Application started successfully with PID: $RUNNING_PID"
            # Check if the port is actually in use by our process
            if lsof -i:8000 -t &>/dev/null; then
              echo "Port 8000 is active and in use. Application is running correctly."
            else
              echo "WARNING: Application started but may not be listening on port 8000."
            fi
          else
            echo "ERROR: Application failed to start properly"
            echo "--- Last 30 lines of app.log ---"
            tail -n 30 app.log
            echo "--------------------------------"
          fi
          
          echo "Application update process completed"
        EOF